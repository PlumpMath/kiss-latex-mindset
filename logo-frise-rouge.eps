%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 3.01
%%LanguageLevel: 2
%%BoundingBox: 0 0 199 53
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.01 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
0 0 199 53 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
0 528.789 m
0 0 l
1984.46 0 l
1984.46 528.789 l
W
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
1 i
1984.46 2.14062 m
1983.66 527.41 l
1894.59 527.41 l
1885.32 515.039 1891.59 459.344 1863.39 448.711 c
1767.94 470.109 1854.92 480.965 1822.17 527.41 c
1818.08 527.18 1779.13 527.438 1775.02 527.41 c
1779.47 526.809 1796.1 508.137 1771.19 486.734 c
1737.75 266.57 1799.21 176.836 1768.13 2.27734 c
1984.46 2.14062 l
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
563.562 364.746 m
599.309 381.598 599.57 418.926 601.223 443.414 c
590.402 455.555 548.02 456.309 531.043 453.215 c
507.52 433.523 527.941 398.359 513.895 375.5 c
523.164 355.723 548.02 369.566 563.562 364.746 c
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
767.75 104.141 m
778.332 101.105 l
788.047 99.1406 801.16 98.7227 811.316 103 c
808.656 110.039 805.07 116.711 800.734 122.109 c
789.152 116.574 778.105 110.703 767.75 104.141 c
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
770.539 341.785 m
748.977 399.023 826.863 422.355 856.883 457.297 c
897.18 434.832 l
892.805 395.73 821.391 388.512 825.746 346.133 c
833.207 339.824 839.711 329.176 849.402 327.129 c
852.793 316.594 843.977 310.176 837.59 303.781 c
806.254 291.148 790.125 321.828 770.539 341.785 c
h
811.316 103 m
819.793 81.8477 820.793 55.7148 810.652 39.1914 c
706.379 35.5469 l
706.379 48.9062 l
724.691 72.9883 744.941 90.0195 767.75 104.141 c
746.82 110.039 l
717.023 130.402 787.098 159.59 797.969 167.559 c
826.133 122.461 l
825.285 112.297 819.223 106.359 811.316 103 c
h
603.934 52.8906 m
581.5 91.6523 607.637 156.25 613.84 193.242 c
619.133 198.508 624.59 205.664 633.684 202.844 c
639.941 182.578 610.195 169.387 630.086 151.875 c
650.668 157.969 677.695 139.453 698.332 155.312 c
687.547 172.91 665.078 164.043 649.816 171.184 c
649.816 180.801 l
695.809 183.574 l
702.961 173.82 735.492 164.609 728.309 146.016 c
697.688 102.793 645.324 77.5781 603.934 52.8906 c
h
567.715 271.496 m
572.473 279.445 581.879 274.746 588.676 276.016 c
591.145 256.613 621.41 280.617 609.738 255.273 c
606.336 255.273 l
593.516 248.586 572.473 255.273 567.715 271.496 c
h
627.363 260.086 m
642.961 269.152 664.648 267.727 661.047 237.727 c
635.832 237.727 l
630.98 243.77 623.695 249.785 627.363 260.086 c
h
646.301 471.168 m
650.668 478.219 657.055 491.543 669.699 487.184 c
668.637 476.613 663.301 457.066 646.301 465.07 c
646.301 471.168 l
h
675.93 234.699 m
700.188 229.395 726.406 247.852 744.211 228.535 c
736.211 211.68 736.211 183.574 708.266 199.465 c
695.809 209.18 667.766 204.797 669.699 228.535 c
675.93 234.699 l
h
678.602 455.328 m
680.43 475.555 704.699 467.625 718.195 473.848 c
720.941 465.07 l
708.266 455.328 699.266 434.121 678.602 442.129 c
678.602 455.328 l
h
750.617 301.727 m
735.254 291.148 709.305 294.773 692.074 298.301 c
696.551 305.23 697.59 313.34 698.332 321.164 c
709.305 330.035 720.941 349.387 740.734 343.258 c
748.797 331.871 752.418 317.633 750.617 301.727 c
h
750.176 462.082 m
745.809 406.934 l
743.625 398.262 737.016 381.055 721.508 387.555 c
702.734 383.117 712.582 405.977 710.441 414.426 c
727.004 428.516 731.504 458.902 750.176 462.082 c
h
575.082 298.301 m
561.648 298.301 l
542.742 305.23 501.281 314.957 499.582 336.953 c
525.723 330.035 549.023 316.844 575.082 307.965 c
575.082 298.301 l
h
899.965 240.938 m
874.812 240.059 853.133 203.762 831.57 218.828 c
844.211 254.172 872.016 283.172 883.789 317.633 c
904.473 364.543 938.211 466.848 923.801 527.762 c
827.234 527.762 l
795.785 518.879 819.07 437.609 786.543 432.254 c
777.621 454.48 780.25 480.965 754.707 527.18 c
702.539 527.18 l
706.512 492.352 701.156 490.672 698.332 487.184 c
680.43 486.227 682.211 514.434 659.68 499.453 c
639.941 503.016 634.598 471.168 613.84 477.336 c
606.777 494.207 586.883 516.125 565.219 503.016 c
584.086 462.297 678.602 445.559 633.684 378.602 c
624.59 359.152 631.84 330.977 607.637 321.164 c
565.219 332.656 525.723 348.551 483.402 359.152 c
487.934 343.258 476.199 321.164 480.645 305.23 c
525.723 299.18 539.223 252.344 577.785 238.234 c
585.988 232.043 589.555 225.051 587.852 215.273 c
560.734 203.762 531.938 227.648 506.805 238.234 c
500.473 235.656 503.93 229.395 503.137 225.051 c
526.504 197.578 602.102 209.18 577.785 151.875 c
557.102 105 561.648 27.3633 490.613 21.0664 c
484.203 7.00391 501.281 8.04688 506.805 1.76953 c
567.863 -4.41406 630.98 53.918 682.211 5.3125 c
699.266 5.3125 720.941 16.0469 734.457 2.14062 c
887.891 2.14062 l
916.805 58.0078 894.457 93.75 897.18 144.98 c
900.578 157.969 861.293 171.184 831.57 164.043 c
826.242 167.637 829.734 174.719 828.953 180.801 c
848.684 203.762 927.875 169.387 909.875 225.051 c
909.875 229.395 909.875 240.059 899.965 240.938 c
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
150.141 470.773 m
53.9297 476.953 2.35547 467.082 1.05469 467.449 c
1.05469 391.211 l
19.0273 391.211 l
40.6914 384.734 55.4219 384.293 77.1875 384.293 c
157.875 376.066 225.832 387.898 305.922 392.266 c
296.867 394.949 287.738 397.145 279.477 396.602 c
265.883 406.871 257.309 413.535 260.52 429.801 c
281.746 452.434 320.637 433.727 345.547 447.219 c
367.551 438.75 352.863 414.766 358.09 399.914 c
355.922 395.73 353.5 396.086 350.941 393.781 c
375.453 393.957 401.582 393.176 429.746 390.586 c
429.746 469.562 l
310.668 477.207 226.648 466.125 150.141 470.773 c
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
1044.75 312.227 m
1027.43 307.781 1005.35 304.293 989.594 314.695 c
997.531 332.488 1016.72 321.887 1030.05 324.605 c
1034.66 318.367 1044.18 325.457 1044.75 312.227 c
h
1101.88 124.551 m
1101.88 101.289 l
1070.96 90.5977 1042.29 56.8867 1008.49 71.7383 c
1008.49 92.8242 l
1022.02 99.1406 1037.7 80.1289 1049.09 109.727 c
1067.62 107.52 1082.8 134.883 1101.88 124.551 c
h
1075.52 441.66 m
1060.93 425.312 l
1055.21 425.312 1044.95 442.785 1043.29 449.82 c
1047.86 455.098 1073.19 447.82 1075.52 441.66 c
h
1076.77 403.863 m
1083.97 398.566 1099.2 398.152 1091.32 378.312 c
1082.31 370.25 1075.58 391.211 1067.14 393.781 c
1076.77 403.863 l
h
1094.05 189.199 m
1094.05 162.227 l
1085.38 163.652 1073.9 157.746 1067.38 166.719 c
1069.15 187.559 1085.38 186.125 1094.05 189.199 c
h
1103.82 259.629 m
1053.68 259.629 l
1053.68 278.098 l
1103.82 278.098 l
1103.82 259.629 l
h
1132 32.8047 m
1120.13 5.07812 1098.21 25.2539 1083.07 32.8047 c
1070.56 37.8711 1060.54 1.25 1048.79 27.7539 c
1048.21 34.1211 1051.61 36.6406 1052.74 41.6797 c
1080.26 60.625 1108.88 45.3906 1132 32.8047 c
h
981.809 142.754 m
981.809 152.383 l
1016.15 152.383 l
1016.15 142.754 l
981.809 142.754 l
h
1040.54 369.012 m
1029.79 360.625 1014.81 356.75 1002.45 355.328 c
994.953 380.168 l
1009.18 381.398 1035.14 388.43 1040.54 369.012 c
h
998.078 407.559 m
1024.47 407.559 l
1024.47 397.949 l
998.078 397.949 l
998.078 407.559 l
h
1160.31 387.297 m
1160.31 357.547 l
1146.47 359.152 1129.77 352.996 1117.72 362.316 c
1123.7 383.918 1146.47 382.57 1160.31 387.297 c
h
1052.74 497.477 m
1091.47 487.852 1132.19 483.234 1173.33 481.555 c
1173.33 527.438 l
1001.08 527.438 l
1000.88 491.105 973.305 440.215 973.305 440.215 c
988.422 440.363 1003.13 439.336 1016.46 432.996 c
1016.46 423.371 l
1002.39 426.836 987.973 428.645 973.305 429.492 c
973.305 280.469 l
992.324 280.469 l
993.426 276.945 996.82 275.066 996.066 270.758 c
992.324 263.641 l
973.305 263.641 l
973.305 245.5 l
979.695 245.156 986.543 243.41 992.324 245.078 c
992.648 244.258 992.973 243.41 993.559 242.676 c
1002.52 241.016 1008.84 229.152 1019.97 235.383 c
1019.97 225.793 l
999.934 225.793 l
996.066 225.793 991.215 226.875 988.203 230.461 c
983.508 228.594 978.426 227.805 973.305 228.535 c
973.305 214.836 l
988.422 220.43 1008.19 214.055 1022.71 213.371 c
1024.38 209.766 1027.75 207.961 1026.63 203.555 c
1022.71 196.574 l
1007.62 202.051 989.008 199.152 973.305 200.742 c
973.305 85.4297 l
978.73 84.4141 984.164 82.8711 988.422 81.8477 c
990.012 77.4609 994.562 74.8242 994.562 69.5898 c
988.723 66.0664 981.027 65.2148 973.305 66.7305 c
973.305 2.27734 l
1173.33 2.27734 l
1173.33 66.7305 l
1165.66 65.2148 1146.67 64.3555 1140.8 67.8047 c
1140.8 73.1562 1160.74 113.594 1166.24 114.609 c
1173.33 200.742 l
1157.61 199.152 1139.16 202.051 1124.03 196.574 c
1120.13 203.555 l
1119.08 207.961 1122.45 209.766 1124.03 213.371 c
1138.67 214.055 1158.43 220.43 1173.33 214.836 c
1173.33 228.535 l
1165.11 227.52 1156.41 229.688 1150.52 235.383 c
1149.93 239.883 1153.31 241.621 1154.49 245.078 c
1160.22 243.41 1167.01 245.156 1173.33 245.5 c
1173.33 263.641 l
1154.49 263.641 l
1150.52 270.758 l
1149.93 275.066 1153.31 276.945 1154.49 280.469 c
1173.33 280.469 l
1173.33 429.492 l
1158.81 428.645 1144.19 426.836 1130.26 423.371 c
1130.26 432.996 l
1143.6 439.336 1158.43 440.363 1173.33 440.215 c
1173.33 469.562 l
1137.76 471.531 1102.45 475.25 1068.98 478.055 c
1060.54 482.559 1048.21 481.555 1042.48 490.438 c
1044.75 496.562 1048.79 497.477 1052.74 497.477 c
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
166.156 495.055 m
251.125 495.055 344.496 502.773 430.656 496.133 c
430.656 528.512 l
0.195312 528.512 l
-0.257812 515.07 0.195312 494.016 0.195312 494.016 c
54.0625 502.906 121.02 495.055 166.156 495.055 c
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
100.086 338.785 m
75.9688 338.785 49.7773 362.316 25.6172 370.117 c
13.5625 370.117 l
1.45703 367.469 l
0.921875 2.27734 l
431.203 2.27734 l
431.203 371.676 l
318.926 384.617 221.016 330.246 100.086 338.785 c
f
[/Separation /PANTONE#20193#20C /DeviceCMYK
{dup 0 mul exch dup 1 mul exch dup 0.66 mul exch 0.13 mul }
] {} cs
[0] sc
[1] sc
1658.67 286.629 m
1648.86 287.531 1626.71 289.668 1624.84 303.781 c
1622.57 319.16 1621.7 340.543 1655.85 334.289 c
1681.23 327.727 1691.38 292.613 1658.67 286.629 c
h
1597.78 94.8438 m
1587.07 82.793 1590.09 28.8203 1564.17 56.8086 c
1536.53 129.492 1573.94 179.543 1580.2 244.141 c
1596.32 261.754 1614.11 268.258 1624.22 263.777 c
1626.71 263.25 1640.23 230.859 1642.49 230.402 c
1645.55 185.93 1618.59 183.73 1644.6 110.039 c
1637.57 97.9883 1605.94 104.141 1597.78 94.8438 c
h
1533.51 330.344 m
1538.9 337.492 1557.85 347.52 1567.89 345.793 c
1578.63 341.395 1585.85 321.016 1581.4 306.883 c
1580.44 295.441 1567.89 298.125 1558.85 298.125 c
1546.21 302.535 1529.86 315.383 1533.51 330.344 c
h
1497.04 358.035 m
1493.3 342.996 1474.58 325.457 1451.2 329.895 c
1439.44 338.785 1443.37 355.633 1440.65 367.949 c
1443.37 376.766 1469.28 383.801 1480.17 381.105 c
1484.64 374.957 1500.53 366.852 1497.04 358.035 c
h
1444.25 432.254 m
1449.6 410.996 1420.42 407.219 1409.44 406.047 c
1397.24 412.539 1381.75 436.301 1389.88 456.219 c
1398.07 464.328 1404.82 474.855 1419.78 470.773 c
1427.76 457.617 1450.97 450.938 1444.25 432.254 c
h
1384.27 78.0273 m
1384.27 110.801 l
1359.46 134.23 l
1349.03 169.387 l
1336.87 223.105 1350.79 285.48 1360.47 305.723 c
1360.04 305.348 1359.95 305.23 1359.54 305.07 c
1350.51 307.781 1336.12 299.797 1330.68 311.164 c
1338.84 324.504 1327.2 344.852 1340.66 356.191 c
1350.51 358.035 1374.97 357.547 1381.26 350.508 c
1380.62 339.551 1380.17 323.977 1370.22 313.004 c
1380.56 315.148 1391.88 313.34 1399.96 305.23 c
1397.37 202.441 1407.3 132.941 1415.67 38.6523 c
1384.27 78.0273 l
h
1286.73 417.461 m
1269.42 432.254 1258.74 449.297 1263.06 472.559 c
1273.92 498.008 1310.47 489.531 1325.62 478.883 c
1337.22 461.895 1358.06 441.73 1326.1 432.82 c
1329.29 391.797 1299.47 398.262 1286.73 417.461 c
h
1718.54 247.852 m
1693.41 308.844 1750.75 511.832 1658.06 528.512 c
1647.92 529.965 1639.37 525.703 1631.34 519.023 c
1647.53 507.461 1659.78 490.211 1662.51 470.598 c
1640.87 422.93 1595.97 481.188 1565.34 465.25 c
1565.34 426.473 l
1552.67 415.926 1543.66 401.773 1525.78 407.102 c
1514.9 419.469 1500.5 428.23 1505.85 445.777 c
1516.84 468.75 1541.89 459.93 1558.12 470.598 c
1557.71 471.168 1557.41 471.707 1557.12 472.262 c
1526.34 479.766 1530.38 527.762 1478.36 527.762 c
1379.03 527.762 l
1332.89 513.547 1276.12 487.184 1222.97 527.438 c
1233.01 461.941 l
1239.58 439.562 l
1239.4 420 l
1262.82 399.629 l
1238.47 378.82 l
1246.75 328.43 l
1265.12 322.965 1284.89 322.07 1285.78 305.23 c
1282.42 277.734 1261.8 246.211 1261.04 217.773 c
1259.81 182.578 1279.37 37.3555 1278.81 2.27734 c
1297.79 4.00391 1388.64 7.67578 1407.22 17.1289 c
1407.3 16.4258 1432.5 3.02734 1432.5 2.27734 c
1464.77 -0.839844 1506.95 -8.85547 1496.44 47.1211 c
1473.1 195.949 l
1445.38 272.156 1496.44 291.148 1513.51 292.027 c
1526.93 279.785 l
1522.21 264.664 1519.72 250.137 1518.41 236.074 c
1521.79 230.402 1524.56 224.367 1522.74 214.836 c
1523.87 205.871 1521.48 200.586 1518.12 196.965 c
1523.48 127.883 1556.5 67.7344 1557.12 1.76953 c
1644.11 2.27734 l
1675.77 26.9258 l
1669.14 88.1953 l
1672.81 145.977 l
1670.83 253.555 l
1684.19 250.469 1697.35 246.719 1712.31 240.938 c
1718.54 247.852 l
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
